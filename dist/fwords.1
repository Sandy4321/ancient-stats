.\" @(#)fwords.1 90/02/15 SMI; from UCB 4.2 BSD and S5r2
.TH FWORDS 1V "02 December 1992"
.SH NAME
fwords \- a fast program for segmenting the English 
         text
.SH SYNOPSIS
.B fwords
[
.B \-x
]
[
.B \-w
]
[
.B \-b
]
[
.B \-s
]
[
.B \-D
]
[
.B \-S
]
[
.B \-f
]    
[
.B \-F
]
[
.B \-v
]
[
.B \-L
]
[
.B \-P
]
[
.IR filename .\|.\|.
]
.SH DESCRIPTION
.LP
Among other capabilities, 
.B fwords
allows you to:
.IP a)
take a sequence of words and break them down so that other programs can count or otherwise process the words
.IP b)
attach byte offsets and word numbers to the words
.IP c)
insert annotations indicating document and sentence boundaries
.RE
.SH OPTIONS
.TP
.B \-x
Causes all numbers output for each word to be printed using
hexadecimal instead of the default decimal.  This substantially
improves the speed of fwords since decimal formatting is expensive.
.B \-w
Causes fwords to add a word number to each word output line.  This
word number increments for each word which is listed and is reset at
document boundaries.
.B \-b
Causes fwords to add a byte offset to each word output line.  This
byte offset is relative to the beginning of the last document
beginning.
.B \-s
Causes fwords to add a sentence number to each word output line.  This
sentence number is reset at each document boundary.
.B \-D
Causes fwords to insert annotations in its output so that other
programs can determine 
which document the words came from within a file.  These annotations
include the document identifier and byte offsets of the start and end
of the documents. 
.PP
The boundaries of the document are specified using a configuration
file as described under the -f option.
.TP
.B \-S
This option will cause fwords to leave annotations in its output 
which mark sentence boundaries.  These annotations are lines which
contain the characters ``#S''.
.TP
.B \-f \fIfilename\fP
Causes fwords to look inf the specified file for a configuration
information which describes the structure of documents.  This
configuration file contains six lines which specify the strings at the
beginning and end of the document, the document identifier, and the
text portion of the document, respectively.  If a string is left
empty, then it is assumed that it occurs immediately.  Thus, if the
strings for the beginning and end of a document identifier are both
left empty, the document identifier will always start and end right
after the beginning of the document.  When this happens, fwords will
make up a document identifier based on the file name being processed.
.TP
.B \-F \fIfilename\fP
Specifies a file name to be used when processing text taken from the
standard input.  This is mostly done to prevent ``-'' from being used
as the file name when manufacturing document identifiers.
.TP
.B \-v 
Causes fwords to print status information on the standard error as
documents are processed.
.TP
.B \-L 
Causes all output on the standard output to be in a form which can be
easily processed by LISP.
.TP
.B \-P
Causes all output on the standard output to be in a form which can be
easily processed by Prolog.
.SH EXAMPLES
A file containing documents of the form
.DS
.nf

<DOC>
<DOCID> doc-1 </DOCID>
<TEXT>
This is the text-of-interest here.
</TEXT>
</DOC>
.DE
.LP
could be parsed using the following configuration file:
.DS
.nf

<DOC>
</DOC>
<DOCID>\s
</DOCID>\n
<TEXT>\n
</TEXT>
.DE
.LP
In this configuration file, the first two lines specify the beginning 
and ending of documents.  These third and fourth lines specify the
strings which mark where the document identifier is found.  If the
third and fourth lines had been left blank, the document identifier
in the document would be ignored, and one would be manufactured from
the file name and a sequence number.  The fifth and sixth lines
specify the strings which enclose the actual text of the document.
.PP
If the configuration file listed above is named \fBconf\fP, then the command
\fBfwords -f conf\fP with no other options would produce the following
output when given the document listed above as input:
.DS
.nf

This
is
the
text-of-interest
here
.DE
.PP
This sort of output would be of use to a word counting application.
On the other hand, the command \fBfwords -f conf -DSwb\fP would
produce
.DS
.nf

$ doc-1 -
This 0 36
is 1 41
the 2 44
text-of-interest 3 48
here 4 65
#S
$ doc-1 85
.DE
.LP
This version might be of use as the raw input to a program which built
an inverted index and needed document boundaries and positional
information.  Adding the \fB-L\fP option produces the same output in a form
congenial to lisp:
.DS
.nf

(doc-start "doc-1" "-" 0)
("This" 0 36 0)
("is" 1 41 0)
("the" 2 44 0)
("text-of-interest" 3 48 0)
("here" 4 65 0)
SENTENCE
(doc-end "doc-1" 85)
.DE
If \fBfwords\fI had been used with no options at all, then the markup
would also appear in the output (sans the angle brackets) as follows:
.DS
.nf

DOC
DOCID
doc-1
DOCID
TEXT
This
is
the
text-of-interest
here
TEXT
DOC
.DE
.SH NOTES
This program is 8-bit clean and should handle all the punctuation in
the high half of the ISO-Latin1 (ISO-8859-1) correctly.
